# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy Amari Shop

on: 
     push: 
          branches: [ "master" ]

jobs:
     #client module
     client: 
           runs-on: self-hosted
           name: Building the client
           strategy:
                fail-fast: true
                matrix: 
                      node-version: [20.x]
           defaults:
                run:
                      working-directory: client

           steps:
              - name: Client Repository
                uses: actions/checkout@v4

              - name: Setup Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                     node-version: ${{ matrix.node-version }}
                     cache-dependency-path: "client"

              - name: Go to frontend stage 
                run: cd /home
              - name: Remove existing client build
                run: sudo rm -rf /home/frontend/dist
              - name: "Go to work folder"
                run: cd /home/actions-runner/_work/Amari-Shop/Amari-Shop/client
    
              - name: Replace build folder
                run:  sudo mv dist /home/frontend

    #server module
     server: 
          runs-on: self-hosted
          name: Building the server
          strategy:
                fail-fast: true
                matrix: 
                       node-version: [20.x]
          defaults:
                run: 
                     working-directory: server

          steps:
            - name: Server Repository
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                   node-version: ${{ matrix.node-version }}
                   cache-dependency-path: "server"

            - name: Move to the server directory 
              run: cd /home/actions-runner/_work/Amari-Shop/Amari-Shop/server
            - name: Install dependencies
              run: npm i
          
  # create .env file for the server
     create-envfile:
        runs-on:  self-hosted
        needs: server

        steps:
           - run: |
                  cd server
                  touch .env
                  echo SERVER_PORT=${{ secrets.SERVER_PORT }} >> .env
                  echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
                  echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
                  echo CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} >> .env
                  echo CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} >> .env
                  echo CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} >> .env

     deploy:
           
           runs-on:  self-hosted
           needs: [ client, server, create-envfile ]
           steps:
             - run: |
                    cd /home/actions-runner/_work/Amari-Shop/Amari-Shop/server
                    sudo pm2 kill
                    sudo pm2 start index.js
                    sudo pm2 save

